import argparse
import os
import glob
import matplotlib.pyplot as plt
from lwcc import LWCC

VALID_MODELS = ["CSRNet", "Bay", "DM-Count", "SFANet"]
VALID_WEIGHTS = ["SHA", "SHB", "QNRF"]

def is_image_file(filename):
    return filename.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp', '.gif'))

def generate_density_map(image_path, output_path, model_name, model_weights):
    count, density = LWCC.get_count(
        image_path,
        return_density=True,
        model_name=model_name,
        model_weights=model_weights,
        resize_img=False
    )
    plt.imshow(density)
    plt.axis('off')
    plt.savefig(output_path, bbox_inches='tight', pad_inches=0)
    plt.close()
    return count

def main():
    parser = argparse.ArgumentParser(description="Generate density maps from images in a directory using LWCC.")
    parser.add_argument("input_dir", help="Path to the input directory containing images")
    parser.add_argument("-o", "--output_dir", default="output", help="Directory to save output density maps and HTML")
    parser.add_argument("--model_name", choices=VALID_MODELS, default="DM-Count", help="Model to use for counting")
    parser.add_argument("--model_weights", choices=VALID_WEIGHTS, default="SHA", help="Weights to use with the model")
    args = parser.parse_args()

    os.makedirs(args.output_dir, exist_ok=True)
    image_files = [f for f in glob.glob(os.path.join(args.input_dir, "*")) if is_image_file(f)]
    results = []

    for image_path in image_files:
        image_name = os.path.basename(image_path)
        density_map_name = f"density_{image_name}"
        density_map_path = os.path.join(args.output_dir, density_map_name)

        count = generate_density_map(image_path, density_map_path, args.model_name, args.model_weights)
        results.append((image_name, density_map_name, count))

    # Generate HTML
    html_path = os.path.join(args.output_dir, "index.html")
    with open(html_path, "w") as html_file:
        html_file.write("<html><head><title>Density Map Results</title></head><body>\n")
        html_file.write("<h1>Density Map Results</h1>\n")
        for original, density, count in results:
            html_file.write(f"<h2>{original} - Count: {count}</h2>\n")
            html_file.write(f"<img src='{original}' alt='Original Image' style='width:45%; margin-right:5%;'>\n")
            html_file.write(f"<img src='{density}' alt='Density Map' style='width:45%;'><br><br>\n")
        html_file.write("</body></html>")

    print(f"Processing complete. Results saved in {args.output_dir}")

if __name__ == "__main__":
    main()

